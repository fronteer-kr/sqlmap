// Generated from C:\Code\SqlMap\src\parser\SqlMap.g4 by ANTLR 4.7
// jshint ignore: start
var antlr4 = require('antlr4/index');


var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002\u000bs\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0005\u00038\n\u0003\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003",
    "\u0005\u0005\u0005P\n\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0007",
    "\u0006U\n\u0006\f\u0006\u000e\u0006X\u000b\u0006\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0007\u0007]\n\u0007\f\u0007\u000e\u0007`\u000b\u0007\u0003",
    "\b\u0003\b\u0003\t\u0003\t\u0003\n\u0003\n\u0003\u000b\u0005\u000bi",
    "\n\u000b\u0003\u000b\u0003\u000b\u0003\f\u0006\fn\n\f\r\f\u000e\fo\u0003",
    "\f\u0003\f\u0002\u0002\r\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006",
    "\u000b\u0007\r\b\u000f\t\u0011\u0002\u0013\u0002\u0015\n\u0017\u000b",
    "\u0003\u0002\u0006\u0004\u0002\f\f\u000f\u000f\u0005\u0002C\\aac|\u0003",
    "\u00022;\u0004\u0002\u000b\u000b\"\"\u0002|\u0002\u0003\u0003\u0002",
    "\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002",
    "\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002",
    "\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002",
    "\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002",
    "\u0002\u0002\u0003\u0019\u0003\u0002\u0002\u0002\u0005\u001b\u0003\u0002",
    "\u0002\u0002\u00079\u0003\u0002\u0002\u0002\tO\u0003\u0002\u0002\u0002",
    "\u000bQ\u0003\u0002\u0002\u0002\rY\u0003\u0002\u0002\u0002\u000fa\u0003",
    "\u0002\u0002\u0002\u0011c\u0003\u0002\u0002\u0002\u0013e\u0003\u0002",
    "\u0002\u0002\u0015h\u0003\u0002\u0002\u0002\u0017m\u0003\u0002\u0002",
    "\u0002\u0019\u001a\u0007<\u0002\u0002\u001a\u0004\u0003\u0002\u0002",
    "\u0002\u001b7\u0007%\u0002\u0002\u001c\u001d\u0007u\u0002\u0002\u001d",
    "\u001e\u0007g\u0002\u0002\u001e\u001f\u0007n\u0002\u0002\u001f \u0007",
    "g\u0002\u0002 !\u0007e\u0002\u0002!8\u0007v\u0002\u0002\"#\u0007w\u0002",
    "\u0002#$\u0007r\u0002\u0002$%\u0007f\u0002\u0002%&\u0007c\u0002\u0002",
    "&\'\u0007v\u0002\u0002\'8\u0007g\u0002\u0002()\u0007k\u0002\u0002)*",
    "\u0007p\u0002\u0002*+\u0007u\u0002\u0002+,\u0007g\u0002\u0002,-\u0007",
    "t\u0002\u0002-8\u0007v\u0002\u0002./\u0007f\u0002\u0002/0\u0007g\u0002",
    "\u000201\u0007n\u0002\u000212\u0007g\u0002\u000223\u0007v\u0002\u0002",
    "38\u0007g\u0002\u000245\u0007u\u0002\u000256\u0007s\u0002\u000268\u0007",
    "n\u0002\u00027\u001c\u0003\u0002\u0002\u00027\"\u0003\u0002\u0002\u0002",
    "7(\u0003\u0002\u0002\u00027.\u0003\u0002\u0002\u000274\u0003\u0002\u0002",
    "\u00028\u0006\u0003\u0002\u0002\u00029:\u0007%\u0002\u0002:;\u0007k",
    "\u0002\u0002;<\u0007p\u0002\u0002<=\u0007e\u0002\u0002=>\u0007n\u0002",
    "\u0002>?\u0007w\u0002\u0002?@\u0007f\u0002\u0002@A\u0007g\u0002\u0002",
    "A\b\u0003\u0002\u0002\u0002BC\u0005\u000b\u0006\u0002CD\u0007A\u0002",
    "\u0002DP\u0003\u0002\u0002\u0002EF\u0005\u000b\u0006\u0002FG\u0007A",
    "\u0002\u0002GH\u0007A\u0002\u0002HP\u0003\u0002\u0002\u0002IJ\u0007",
    "A\u0002\u0002JP\u0005\u000b\u0006\u0002KL\u0007A\u0002\u0002LM\u0007",
    "A\u0002\u0002MN\u0003\u0002\u0002\u0002NP\u0005\u000b\u0006\u0002OB",
    "\u0003\u0002\u0002\u0002OE\u0003\u0002\u0002\u0002OI\u0003\u0002\u0002",
    "\u0002OK\u0003\u0002\u0002\u0002P\n\u0003\u0002\u0002\u0002QV\u0005",
    "\r\u0007\u0002RS\u00070\u0002\u0002SU\u0005\r\u0007\u0002TR\u0003\u0002",
    "\u0002\u0002UX\u0003\u0002\u0002\u0002VT\u0003\u0002\u0002\u0002VW\u0003",
    "\u0002\u0002\u0002W\f\u0003\u0002\u0002\u0002XV\u0003\u0002\u0002\u0002",
    "Y^\u0005\u0011\t\u0002Z]\u0005\u0011\t\u0002[]\u0005\u0013\n\u0002\\",
    "Z\u0003\u0002\u0002\u0002\\[\u0003\u0002\u0002\u0002]`\u0003\u0002\u0002",
    "\u0002^\\\u0003\u0002\u0002\u0002^_\u0003\u0002\u0002\u0002_\u000e\u0003",
    "\u0002\u0002\u0002`^\u0003\u0002\u0002\u0002ab\n\u0002\u0002\u0002b",
    "\u0010\u0003\u0002\u0002\u0002cd\t\u0003\u0002\u0002d\u0012\u0003\u0002",
    "\u0002\u0002ef\t\u0004\u0002\u0002f\u0014\u0003\u0002\u0002\u0002gi",
    "\u0007\u000f\u0002\u0002hg\u0003\u0002\u0002\u0002hi\u0003\u0002\u0002",
    "\u0002ij\u0003\u0002\u0002\u0002jk\u0007\f\u0002\u0002k\u0016\u0003",
    "\u0002\u0002\u0002ln\t\u0005\u0002\u0002ml\u0003\u0002\u0002\u0002n",
    "o\u0003\u0002\u0002\u0002om\u0003\u0002\u0002\u0002op\u0003\u0002\u0002",
    "\u0002pq\u0003\u0002\u0002\u0002qr\b\f\u0002\u0002r\u0018\u0003\u0002",
    "\u0002\u0002\n\u00027OV\\^ho\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function SqlMapLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

SqlMapLexer.prototype = Object.create(antlr4.Lexer.prototype);
SqlMapLexer.prototype.constructor = SqlMapLexer;

SqlMapLexer.EOF = antlr4.Token.EOF;
SqlMapLexer.T__0 = 1;
SqlMapLexer.SQLTYPE = 2;
SqlMapLexer.INCLUDE = 3;
SqlMapLexer.PARAM = 4;
SqlMapLexer.SQLID = 5;
SqlMapLexer.ID = 6;
SqlMapLexer.TEXT = 7;
SqlMapLexer.NL = 8;
SqlMapLexer.WS = 9;

SqlMapLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

SqlMapLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

SqlMapLexer.prototype.literalNames = [ null, "':'" ];

SqlMapLexer.prototype.symbolicNames = [ null, null, "SQLTYPE", "INCLUDE", "PARAM", 
                                     "SQLID", "ID", "TEXT", "NL", "WS" ];

SqlMapLexer.prototype.ruleNames = [ "T__0", "SQLTYPE", "INCLUDE", "PARAM", 
                                 "SQLID", "ID", "TEXT", "ID_LETTER", "DIGIT", 
                                 "NL", "WS" ];

SqlMapLexer.prototype.grammarFileName = "SqlMap.g4";



exports.SqlMapLexer = SqlMapLexer;

